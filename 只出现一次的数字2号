void PercDown(int array[],int s,int n)
 {
     int q;
     int t;
     t=array[s];
     while((q=2*s+1)<n)
     {
         if(q<n-1&&array[q]<array[q+1])
         q++;
         if(t<array[q])
         {
             array[(q-1)/2]=array[q];
             s=q;
         }
         else
         break;
     }
     array[(q-1)/2]=t;
 }
 int * HeapSort(int array[],int n)
 {
     int s;
     int t;
     s=(n-1)/2;
     while(s>=0)
     {
        PercDown(array,s,n);
        s--;
     }
     s=n-1;
     while(s>0)
     {
         t=array[0];
         array[0]=array[s];
         array[s]=t;
         PercDown(array,0,s);
         s--;
     }
     return &array[0];
 }
int singleNumber(int* nums, int numsSize)
{
	if(numsSize<=3)
	{
		return nums[0];
	}
	else
	{
		nums=HeapSort(nums,numsSize);
        int i=0;
		while(i<numsSize-1)
		{
			while(nums[i]==nums[i+1])
			{
				i++;
			}
			if(i==0)
			{
				return nums[i];
			}
            else if(i==numsSize-2)
            {
                return nums[numsSize-1];
            }
			else if(nums[i+1]!=nums[i+2])
			{
				return nums[i+1];
			}
			else
			{
				i++;
			}
		}
		return nums[numsSize-1];	
	}
	return 0;	
}
