int search1(int *nums,int numsSize)
{
	int i=1;
	int j=1;
	int max=nums[1];
	while(i<numsSize)
	{
		max=max>nums[i]?max:nums[i];
		i=i+2;
	}
	while(j<numsSize)
	{
		if(max==nums[j])
		break;
		j=j+2;
	}
	nums[j]=0;
	return max;
}
int search2(int *nums,int numsSize)
{
	int i=0;
	int j=0;
	int min=nums[0];
	while(i<numsSize)
	{
		min=min<nums[i]?min:nums[i];
		i=i+2;
	}
	while(j<numsSize)
	{
		if(min==nums[j])
		break;
		j=j+2;
	}
	nums[j]=101;
	return min;
}
int* sortEvenOdd(int* nums, int numsSize, int* returnSize)
{
	int *s1=(int *)malloc(sizeof(int)*numsSize);
	if(numsSize==1)
	{
		s1[0]=nums[0];
		*returnSize=1;
		return s1;
	}
	else
	{
		int i=1;
		int j=0;
		while(i<numsSize)
		{
			s1[i]=search1(nums,numsSize);
			i=i+2;
		}
		while(j<numsSize)
		{
			s1[j]=search2(nums,numsSize);
			j=j+2;
		}
		*returnSize=numsSize;
		return s1;	
	}
}
