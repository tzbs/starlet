bool judge(char *s)
{
	int e=strlen(s);
	int i=0;
	int j=e-1;
	while(i<j)
	{
		if(s[i]!=s[j])
		return false;
		i++;
		j--;
	}
	return true;
}
bool validPalindrome(char * s)
{
	int e=strlen(s);
	if(e<=2)
	{
		return true;
	}
	else
	{
		if(judge(s)==true)
		{
			return true;
		}
		char *s1=(char *)malloc(sizeof(char)*(e+1));
		int i=0;
		int j=0;
		int m=0;
		while(i<e)
		{
			m=0;
			j=0;
			while(m<i)
			{
				s1[j++]=s[m];
				m++;
			}
			m=i+1;
			while(m<e)
			{
				s1[j++]=s[m];
				m++;
			}
			s1[j]='\0';
			if(judge(s1)==true)
			{
				return true;
			}
			i++;	
		}
		return false;
	}
}
